# Download the install Script
- name: Run block when not airgap install
  when: not rke2_airgap_install
  block:
    - name: Download RKE2 install.sh
      ansible.builtin.get_url:
        url: "{{ rke2_channel_url }}"
        dest: "{{ rke2_install_script }}"
        mode: "0755"
        owner: root
        group: root

    # Install Script for Server
    - name: Execute install Script
      register: install_sh_out
      environment:
        INSTALL_RKE2_TYPE: "{{ rke2_type }}"
        INSTALL_RKE2_CHANNEL: "{{ rke2_channel }}"
      changed_when: rke2_update
      notify:
        - "Restart rke2"
      ansible.builtin.command:
        cmd: "{{ rke2_install_script }}"

# Install Script for Server
- name: Execute install Script
  register: install_sh_out
  environment:
    INSTALL_RKE2_TYPE: "{{ rke2_type }}"
    INSTALL_RKE2_ARTIFACT_PATH: "{{ rke2_artifacts_path }}"
    INSTALL_RKE2_CHANNEL: "{{ rke2_channel }}"
    INSTALL_RKE2_METHOD: tar
  when: rke2_airgap_install
  changed_when: rke2_airgap_install
  notify:
    - "Restart rke2"
  ansible.builtin.command:
    cmd: "{{ rke2_install_script }}"

- name: Check if RKE2 is Started and enabled
  register: rke2_started
  ansible.builtin.systemd:
    daemon_reload: true
    name: "rke2-{{ rke2_type }}"
    enabled: true
    state: started
