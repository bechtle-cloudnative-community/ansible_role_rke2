---
# Master.yml
# Check Conf file exists
# Create Directory for Config
- name: Create config directory
  ansible.builtin.file:
    path: "{{ config_path }}"
    state: directory
    mode: 0755
    owner: root
    group: root

# RKE2 Check Token file exists
- name: Check RKE2 Token File
  delegate_to: "{{ item }}"
  ansible.builtin.stat:
    path: "{{ token_file }}"
  register: token_stat
  loop: "{{ play_hosts }}"

# RKE2 Token auslesen
- name: Read RKE2 Token File 
  delegate_to: "{{ token_node.item }}"
  ansible.builtin.slurp:
    path: "{{ token_file }}"
  when: token_node.stat.exists
  register: token_b64
  loop: "{{ token_stat.results }}"
  loop_control:
    loop_var: token_node

# Read Token value to facts
- name: Set token to facts    
  ansible.builtin.set_fact:
    token: "{{ item.content | b64decode }}" 
    rke2_server_active: true 
  when: item.content is defined
  loop: "{{ token_b64.results }}"

- name: RKE2 Initial Token Setup by unexistent
  ansible.builtin.set_fact:
    token: "{{ lookup('community.general.random_string', special=false, length=33) }}"
    rke2_server_active: false 
  when: token is undefined

# Download the install Script
- name: Download RKE2 install.sh
  ansible.builtin.get_url:
    url: "{{ channel_url }}"
    dest: "{{ install_sh }}"
    mode: 0755
    owner: root
    group: root
  when: update

# Template Config file with the Values from default or passed by playbook and Inventorie
- name: Template Config file
  ansible.builtin.template:
    src: "{{ template_config }}"
    dest: "{{ config_file }}"
    mode: 0644
    owner: root
    group: root
  notify:
    - "Restart rke2-{{ rke2_type }}"

# Install Script for Server
- name: Execute install Script
  ansible.builtin.command:
    cmd: "{{ install_sh }}"
  register: install_sh_out
  environment:
    INSTALL_RKE2_TYPE: "{{ rke2_type }}"
    INSTALL_RKE2_CHANNEL: "{{ channel }}"
  when: update
  notify:
    - "Restart rke2-{{ rke2_type }}"

- name: Verfiy RKE2 systemd service is started and enabled
  ansible.builtin.service:
    name: "rke2-{{ rke2_type }}"
    enabled: true
    state: started

